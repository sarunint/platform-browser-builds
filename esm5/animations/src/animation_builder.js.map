{"version":3,"file":"animation_builder.js","sourceRoot":"","sources":["../../../../../../packages/platform-browser/animations/src/animation_builder.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationBuilder, AnimationFactory, AnimationMetadata, AnimationOptions, AnimationPlayer, NoopAnimationPlayer, sequence} from '@angular/animations';\nimport {Inject, Injectable, RendererFactory2, RendererType2, ViewEncapsulation} from '@angular/core';\nimport {DOCUMENT} from '@angular/platform-browser';\n\nimport {AnimationRenderer} from './animation_renderer';\n\n@Injectable()\nexport class BrowserAnimationBuilder extends AnimationBuilder {\n  private _nextAnimationId = 0;\n  private _renderer: AnimationRenderer;\n\n  constructor(rootRenderer: RendererFactory2, @Inject(DOCUMENT) doc: any) {\n    super();\n    const typeData = {\n      id: '0',\n      encapsulation: ViewEncapsulation.None,\n      styles: [],\n      data: {animation: []}\n    } as RendererType2;\n    this._renderer = rootRenderer.createRenderer(doc.body, typeData) as AnimationRenderer;\n  }\n\n  build(animation: AnimationMetadata|AnimationMetadata[]): AnimationFactory {\n    const id = this._nextAnimationId.toString();\n    this._nextAnimationId++;\n    const entry = Array.isArray(animation) ? sequence(animation) : animation;\n    issueAnimationCommand(this._renderer, null, id, 'register', [entry]);\n    return new BrowserAnimationFactory(id, this._renderer);\n  }\n}\n\nexport class BrowserAnimationFactory extends AnimationFactory {\n  constructor(private _id: string, private _renderer: AnimationRenderer) { super(); }\n\n  create(element: any, options?: AnimationOptions): AnimationPlayer {\n    return new RendererAnimationPlayer(this._id, element, options || {}, this._renderer);\n  }\n}\n\nexport class RendererAnimationPlayer implements AnimationPlayer {\n  public parentPlayer: AnimationPlayer|null = null;\n  private _started = false;\n\n  constructor(\n      public id: string, public element: any, options: AnimationOptions,\n      private _renderer: AnimationRenderer) {\n    this._command('create', options);\n  }\n\n  private _listen(eventName: string, callback: (event: any) => any): () => void {\n    return this._renderer.listen(this.element, `@@${this.id}:${eventName}`, callback);\n  }\n\n  private _command(command: string, ...args: any[]) {\n    return issueAnimationCommand(this._renderer, this.element, this.id, command, args);\n  }\n\n  onDone(fn: () => void): void { this._listen('done', fn); }\n\n  onStart(fn: () => void): void { this._listen('start', fn); }\n\n  onDestroy(fn: () => void): void { this._listen('destroy', fn); }\n\n  init(): void { this._command('init'); }\n\n  hasStarted(): boolean { return this._started; }\n\n  play(): void {\n    this._command('play');\n    this._started = true;\n  }\n\n  pause(): void { this._command('pause'); }\n\n  restart(): void { this._command('restart'); }\n\n  finish(): void { this._command('finish'); }\n\n  destroy(): void { this._command('destroy'); }\n\n  reset(): void { this._command('reset'); }\n\n  setPosition(p: number): void { this._command('setPosition', p); }\n\n  getPosition(): number { return 0; }\n\n  public totalTime = 0;\n}\n\nfunction issueAnimationCommand(\n    renderer: AnimationRenderer, element: any, id: string, command: string, args: any[]): any {\n  return renderer.setProperty(element, `@@${id}:${command}`, args);\n}\n"]}